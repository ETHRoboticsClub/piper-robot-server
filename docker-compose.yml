version: '3.8'

services:
  fastapi:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: tactile-teleop-api
    restart: unless-stopped
    env_file:
      - ${ENV_FILE:-development.env} # Domain and deployment configuration
      - .env # API keys and secrets
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - tactile-network
    # For development/debugging - expose FastAPI directly
    # ports:
    #   - "8000:8000"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    container_name: tactile-teleop-nginx
    build:
      context: .
      dockerfile: docker/nginx.dockerfile
      args:
        DOMAIN_NAME: ${DOMAIN_NAME:-localhost}
    networks:
      - tactile-network
    env_file:
      - ${ENV_FILE:-development.env} # Domain and deployment configuration
      - .env # API keys and secrets
    ports:
      - '${NGINX_HTTP_PORT:-8080}:80' # HTTP
      - '${NGINX_HTTPS_PORT:-8443}:443' # HTTPS
    volumes:
      # Certbot certificates and challenges
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      fastapi:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-k', '-f', 'https://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    command: /bin/sh -c "while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    networks:
      - tactile-network
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: unless-stopped
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;" # ðŸ’¡
    depends_on:
      - nginx

networks:
  tactile-network:
    driver: bridge
